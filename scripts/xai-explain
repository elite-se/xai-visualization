#!/bin/env python

import argparse
from xai_visualization.config import Config
from tensorflow import keras
import innvestigate
from tf_explain.callbacks.vanilla_gradients import VanillaGradients
import numpy as np
import shap
from xai_visualization.train import prepare_dataset
from xai_visualization.util.load_data import feature_names

def explain(model):
    data_train, labels_train, data_test, labels_test = prepare_dataset("data")
    explainer = shap.GradientExplainer(model, data_train[:100])
    shap_values = explainer.shap_values(data_train[:10])

    shap.summary_plot(shap_values, data_train[:10], 
    class_names=[str(i) for i in range(18)],
    feature_names=feature_names)
    #shap.force_plot(explainer.expected_value[0], shap_values[0][0,:], data_train[0,:], link="logit")



if __name__ == "__main__":
    parser = argparse.ArgumentParser("explain the decisions of the model")
    parser.add_argument("--model", type=str, help="the path to the model", required=True)
    parser.add_argument("--config", type=str, help="the config", required=False)
    args = parser.parse_args()

    
    model = keras.models.load_model(args.model)

    explain(model)